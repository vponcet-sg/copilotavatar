
name: Build and deploy Node.js app to Azure Web App - GYDJv2

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read #This is required for actions/checkout

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '22.x'  # Match your local development version
          cache: 'npm'

      - name: npm install, build, and test
        run: |
          npm ci
          npm run build --if-present
          npm run test --if-present || true

      - name: Prepare deployment package
        run: |
          # Create deployment package with all necessary files
          mkdir deploy-package
          
          # Copy built assets
          cp -r dist deploy-package/
          
          # Copy server and config files
          cp server.js deploy-package/
          cp package.json deploy-package/
          cp package-lock.json deploy-package/
          cp web.config deploy-package/
          
          # Copy public folder if it exists
          if [ -d "public" ]; then
            cp -r public deploy-package/
          fi
          
          # Copy environment files if they exist
          cp .env deploy-package/ 2>/dev/null || true
          
          # Install production dependencies
          cd deploy-package
          npm ci --only=production --omit=dev
          cd ..

      - name: Zip artifact for deployment
        run: |
          cd deploy-package
          zip -r ../release.zip .
          cd ..

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write #This is required for requesting the JWT
      contents: read #This is required for actions/checkout
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app

      - name: Unzip artifact for deployment
        run: unzip release.zip
      
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_ACD1C4D0F26548A3A6F492D08835C484 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_D110D59C5BA047DA82254FF4B8A570CE }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_1698A8A41FF842D39CFB2C55BAE07A4D }}

      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'GYDJv2'
          slot-name: 'Production'
          package: .
          
      - name: 'Configure Azure Web App Settings'
        uses: azure/CLI@v1
        with:
          inlineScript: |
            # Set Node.js version to match build
            az webapp config appsettings set \
              --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
              --name GYDJv2 \
              --settings WEBSITE_NODE_DEFAULT_VERSION=~22
            
            # Set startup command
            az webapp config set \
              --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
              --name GYDJv2 \
              --startup-file "npm start"
            
            # Enable logging for debugging
            az webapp log config \
              --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
              --name GYDJv2 \
              --application-logging filesystem \
              --level information
            
            # Set additional environment variables
            az webapp config appsettings set \
              --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
              --name GYDJv2 \
              --settings \
                NODE_ENV=production \
                WEBSITES_ENABLE_APP_SERVICE_STORAGE=false \
                WEBSITES_PORT=8080
